package ${package_name};

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import jp.co.intra_mart.framework.base.data.DataAccessException;
import jp.co.intra_mart.framework.base.data.DataConnectException;
import jp.co.intra_mart.framework.base.data.DataPropertyException;
import jp.co.intra_mart.framework.base.data.LoginGroupDBDAO;
/**
 * DAO class of ${class_description}
 */
public class ${class_name} extends LoginGroupDBDAO implements ${interface_name} {

	/**
	 * Select
	 * 
	 * @return Insert Record Count
	 * @throws DataConnectException
	 * @throws DataAccessException
	 * @throws DataPropertyException
	 */
	public ${module_name} select(${primary_key_parameters}) throws DataConnectException, DataAccessException, DataPropertyException{
	
		PreparedStatement statement = null;
		
		${module_name} result = null;
		
		try {
		
			String sql = "SELECT * FROM ${table.name} ${where_statement} ";
			
			statement = getConnection().prepareStatement(sql);
			
			#foreach( $field in ${table.getPrimaryKeys()})
			#if($field.type=="String") statement.setString($velocityCount, $field.name);
			#elseif($field.type=="int") statement.setInt($velocityCount, $field.name);
			#elseif($field.type=="java.util.Date") statement.setTimestamp($velocityCount, $field.name);
			#elseif($field.type=="float") statement.setFloat($velocityCount, $field.name);
			#elseif($field.type=="long") statement.setLong($velocityCount, $field.name);
			#else statement.setObject($velocityCount, $field.name);
			#end
			#end
			
			ResultSet rs = statement.executeQuery();
			
			if (rs.next()) {
				
				result = new ${module_name}();
				
				#foreach( $field in ${table.fields})				
				#if($field.type=="String") result.set${field.getNameWithFirstUpper()}(rs.getString("$field.name"));
				#elseif($field.type=="int") result.set${field.getNameWithFirstUpper()}(rs.getInt("$field.name"));
				#elseif($field.type=="java.util.Date") result.set${field.getNameWithFirstUpper()}(rs.getDate("$field.name"));
				#elseif($field.type=="float") result.set${field.getNameWithFirstUpper()}(rs.getFloat("$field.name"));
				#elseif($field.type=="long") result.set${field.getNameWithFirstUpper()}(rs.getLong("$field.name"));
				#else result.set${field.getNameWithFirstUpper()}(rs.getObject("$field.name"));
				#end
				#end
				
			}
		} catch (Exception e) {
			throw new DataAccessException(e.getMessage(), e);
		} finally {
			try {
				if (statement != null) {
					statement.close();
				}
			} catch (SQLException e1) {
			}
		}
		
		return result;
	}
	
	/**
	 * Insert
	 * 
	 * @return Insert Record Count
	 * @throws DataConnectException
	 * @throws DataAccessException
	 * @throws DataPropertyException
	 */
	public int insert(${module_name} bean) throws DataConnectException, DataAccessException, DataPropertyException{
	
		PreparedStatement statement = null;
		
		int result = null;
		
		try {
		
			String sql = "INSERT INTO ${table.name} ($insert_filed_name) VALUES (${insert_values}) ";
			
			statement = getConnection().prepareStatement(sql);
			
			#foreach( $field in ${table.fields()})
			#if($field.type=="String") statement.setString($velocityCount, bean.get${field.getNameWithFirstUpper()}());
			#elseif($field.type=="int") statement.setInt($velocityCount, bean.get${field.getNameWithFirstUpper()}());
			#elseif($field.type=="java.util.Date") statement.setTimestamp($velocityCount, bean.get${field.getNameWithFirstUpper()}());
			#elseif($field.type=="float") statement.setFloat($velocityCount, bean.get${field.getNameWithFirstUpper()}());
			#elseif($field.type=="long") statement.setLong($velocityCount, bean.get${field.getNameWithFirstUpper()}());
			#else statement.setObject($velocityCount, bean.get${field.getNameWithFirstUpper()}());
			#end
			#end
			
			result = statement.executeUpdate();
			
		} catch (Exception e) {
			throw new DataAccessException(e.getMessage(), e);
		} finally {
			try {
				if (statement != null) {
					statement.close();
				}
			} catch (SQLException e1) {
			}
		}

		return result;
	}
	
	/**
	 * Update
	 * 
	 * @return Update Record Count
	 * @throws DataConnectException
	 * @throws DataAccessException
	 * @throws DataPropertyException
	 */
	public int update(${module_name} bean) throws DataConnectException, DataAccessException, DataPropertyException{
		
		PreparedStatement statement = null;
		
		int result = null;
		
		try {
		
			String sql = "UPDATE ${table.name} SET ($update_statement) ${where_statement} ";
			
			statement = getConnection().prepareStatement(sql);
			
			#set( $count = 0 )
			
			#foreach( $field in ${table.fields()})
			#if($field.type=="String") statement.setString($velocityCount, bean.get${field.getNameWithFirstUpper()}());
			#elseif($field.type=="int") statement.setInt($velocityCount, bean.get${field.getNameWithFirstUpper()}());
			#elseif($field.type=="java.util.Date") statement.setTimestamp($velocityCount, bean.get${field.getNameWithFirstUpper()}());
			#elseif($field.type=="float") statement.setFloat($velocityCount, bean.get${field.getNameWithFirstUpper()}());
			#elseif($field.type=="long") statement.setLong($velocityCount, bean.get${field.getNameWithFirstUpper()}());
			#else statement.setObject($velocityCount, bean.get${field.getNameWithFirstUpper()}());
			#end
			#set( $count = $velocityCount )
			#end
			
			#foreach( $field in ${table.getPrimaryKeys()})
			#set( $counter = $velocityCount+$count )
			#if($field.type=="String") statement.setString($counter, bean.get${field.getNameWithFirstUpper()});
			#elseif($field.type=="int") statement.setInt($counter, bean.get${field.getNameWithFirstUpper()});
			#elseif($field.type=="java.util.Date") statement.setTimestamp($counter, bean.get${field.getNameWithFirstUpper()});
			#elseif($field.type=="float") statement.setFloat($counter, bean.get${field.getNameWithFirstUpper()});
			#elseif($field.type=="long") statement.setLong($counter, bean.get${field.getNameWithFirstUpper()});
			#else statement.setObject($counter, bean.get${field.getNameWithFirstUpper()});
			#end
			#end
			
			result = statement.executeUpdate();
			
		} catch (Exception e) {
			throw new DataAccessException(e.getMessage(), e);
		} finally {
			try {
				if (statement != null) {
					statement.close();
				}
			} catch (SQLException e1) {
			}
		}

		return result;
	}
	
	/**
	 * Delete
	 * 
	 * @return Update Record Count
	 * @throws DataConnectException
	 * @throws DataAccessException
	 * @throws DataPropertyException
	 */
	public int delete(${module_name} bean) throws DataConnectException, DataAccessException, DataPropertyException{
	
		PreparedStatement statement = null;
		
		int result = null;
		
		try {
		
			String sql = "DELETE FROM ${table.name} ${where_statement}";
			
			statement = getConnection().prepareStatement(sql);
			
			#foreach( $field in ${table.getPrimaryKeys()})
			#if($field.type=="String") statement.setString($velocityCount, $field.name);
			#elseif($field.type=="int") statement.setInt($velocityCount, $field.name);
			#elseif($field.type=="java.util.Date") statement.setTimestamp($velocityCount, $field.name);
			#elseif($field.type=="float") statement.setFloat($velocityCount, $field.name);
			#elseif($field.type=="long") statement.setLong($velocityCount, $field.name);
			#else statement.setObject($velocityCount, $field.name);
			#end
			#end
			
			result = statement.executeUpdate();
			
		} catch (Exception e) {
			throw new DataAccessException(e.getMessage(), e);
		} finally {
			try {
				if (statement != null) {
					statement.close();
				}
			} catch (SQLException e1) {
			}
		}

		return result;
	}
}