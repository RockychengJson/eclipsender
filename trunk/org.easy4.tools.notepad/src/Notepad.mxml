<?xml version="1.0" encoding="utf-8"?>

<mx:WindowedApplication xmlns:mx="http://www.adobe.com/2006/mxml" 
	paddingBottom="0" paddingTop="0" paddingLeft="0" paddingRight="0" backgroundColor="#FFFFFF"
	creationComplete="initApp()" xmlns:ns1="controls.*" layout="vertical">

	<mx:Script>
		<![CDATA[
			import controls.ItemRenderer;
			import controls.NewItemPopup;
			import mx.containers.Canvas;
			import mx.collections.ArrayCollection;
			import mx.controls.listClasses.IListItemRenderer;
			import mx.controls.Label;
			import mx.controls.Text;
			import mx.controls.TextArea;
			import mx.controls.Alert;
			import mx.core.UITextField;
			import mx.core.IFlexDisplayObject;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
			import mx.managers.CursorManager;
			
			[Embed(source='icons/icon-delete.gif')]
			private var deleteCursorCls:Class;
			
			private function initApp():void {
            	ceritia.addEventListener(KeyboardEvent.KEY_UP, setCeritia);
            	feed.send();
            	mainPanel.title = "Loading...";
            	details.height = mainPanel.height - 40;
            	this.statusBar.visible = false;
        	}
        	
        	private function mainPanel_OnResize():void {
        		//details.width = mainPanel.width - 10;
        		details.height = mainPanel.height - 40;
        	}
			
			private function alert(title:String, message:String):void {
				Alert.show(message, title, mx.controls.Alert.OK);
			}
			
			public var displayCount:Number = 10;
			
			private var pointer:Number = 0;
			
			[Bindable]
			public var dataList:ArrayCollection = new ArrayCollection();
			
			private function makeDataList():void {
				
				var result:ArrayCollection = feed.lastResult.rss.channel.item;
				
				for(var i:Number = 0; i<19; i++) {
					var title:String = result[i].title;
					var text:String = result[i].description;
					var date:String = result[i].pubDate;
					dataList.addItem({title: title,text: text, date: date});
					var item:ItemRenderer = new ItemRenderer();
					item.dataSource = {title: title,text: text, date: date};
					item.addEventListener(MouseEvent.CLICK, item_OnClick);
					details.addChild(item);
				}
				
				mainPanel.title = "";
				
			}
			
			private var lastShownItem:ItemRenderer;
			
			private function item_OnClick(event:MouseEvent):void {
				var item:ItemRenderer = ItemRenderer (event.currentTarget);
				
				if (btnDelete.pushed) {
					if (item.isDeleted()) {
						pnlTrash.removeChild(item);
						return;
					}
					item.pushToTrash();
					//item.removeEventListener(MouseEvent.CLICK, item_OnClick);
					pnlTrash.addChild(item);
					return;
				}
				
				if (item.isDeleted()) {
					return;
				}
				
				if (lastShownItem == item) {
					return;
				}
				item.showDetail(true);
				item.setFocus();
				mainPanel.title = item.dataSource.title;
				if (lastShownItem != null) {
					lastShownItem.showDetail(false);
				}
				lastShownItem = item;
			}
			
			private function item_OnMove(event:KeyboardEvent):void {
				if (event.target is UITextField) {
					return;
				}
				
				if (event.keyCode != Keyboard.UP && event.keyCode != Keyboard.DOWN) {
					return;
				}
				
				var index:Number = -1;
				
				if (lastShownItem != null) {
					index = details.getChildIndex(lastShownItem);
				}
				
				var nextItem:ItemRenderer = null;
				
				var itemCount:Number = details.getChildren().length;
				
				if (event.keyCode == Keyboard.UP) {
					if (index - 1 < 0) {
						nextItem = ItemRenderer (details.getChildAt(itemCount - 1));
					} else {
						nextItem = ItemRenderer (details.getChildAt(index - 1));
					}
				} else if (event.keyCode == Keyboard.DOWN) {
					if (index + 1 >= itemCount) {
						nextItem = ItemRenderer (details.getChildAt(0));
					} else {
						nextItem = ItemRenderer (details.getChildAt(index + 1));
					}
				}
				
				nextItem.dispatchEvent(new MouseEvent(MouseEvent.CLICK));
				
			}
			
			[Bindable]
            public var ceritias:ArrayCollection = new ArrayCollection();
			
			private function setCeritia(event:KeyboardEvent):void {
				if (ceritia.text == "") {
					return;
				}
				if (event.keyCode == 13) {
					var item:Object = {label:ceritia.text, data:ceritia.text};
					var exist:Boolean = false;
					for(var i:Number = 0; i<ceritias.length; i++){
						if (ceritias[i].data == item.data) {
							exist = true;
							break;
						}
					}
					if (!exist) {
						ceritias.addItem(item);
					}
				}
			}
			
			private function showAddNewPopupWindow():void {
				var addNewPopupWindow:IFlexDisplayObject = PopUpManager.createPopUp(this, NewItemPopup, false);
				var posX: Number = (this.width - addNewPopupWindow.width) / 2;
				var posY: Number = (this.height - addNewPopupWindow.height) / 2;
				addNewPopupWindow.move(posX, posY);
				addNewPopupWindow.alpha = 0.9;
			}
			
			private var cursorID:Number = 0;
			
			private function activeDeleteButton():void {
				if (btnDelete.pushed) {
					cursorID = CursorManager.setCursor(deleteCursorCls);
					CursorManager.showCursor();
				} else {
					CursorManager.removeCursor(cursorID);
					CursorManager.showCursor();
				}
			}
			
		]]>
	</mx:Script>

	<mx:HTTPService id="feed" url="http://localhost/feeds/news.rss" result="makeDataList()" />
	
	<mx:HBox width="100%" height="40" verticalAlign="middle" paddingLeft="10" paddingRight="20">
		<mx:Image width="120" height="26" source="@Embed(source='images/notebook.gif')" />
		<mx:ComboBox id="ceritia" width="100%" editable="true" dataProvider="{ceritias}" />
		<mx:Button id="btnSearch" label="Search" icon="@Embed(source='icons/icon-new.gif')" />
		<mx:Button id="btnAddNew" label="Add" icon="@Embed(source='icons/icon-new.gif')" click="{showAddNewPopupWindow()}" />
		<ns1:PushButton id="btnDelete" label="Delete" icon="@Embed(source='icons/icon-delete.gif')" click="{activeDeleteButton()}" />
	</mx:HBox>
	
	<mx:HDividedBox width="100%" height="100%" paddingLeft="5" paddingRight="5" paddingBottom="5">
	
		<mx:Canvas label="Left Panel" width="30%" height="100%">
			<mx:VBox width="100%" height="100%">
				<mx:Panel width="100%" height="200" layout="vertical" id="pnlBooks" title="Books" borderColor="#99CCFF" verticalGap="0">
				</mx:Panel>
				<mx:Panel width="100%" height="100%" layout="vertical" id="pnlTags" title="Tags" borderColor="#B5EDBC" verticalGap="0">
				</mx:Panel>
				<mx:Panel width="100%" height="200" layout="vertical" id="pnlTrash" title="Trash" borderColor="#6093C6" verticalGap="0">
				</mx:Panel>
			</mx:VBox>
        </mx:Canvas>
        
        <mx:Canvas label="Right Panel" width="70%" height="100%">
        	<mx:Panel id="mainPanel" width="100%" height="100%" 
        		layout="vertical" 
        		backgroundColor="#FAFBFC" borderColor="#99CCFF"
        		resize="mainPanel_OnResize()" keyDown="item_OnMove(event)">
        		<mx:VBox id="details" width="100%" verticalGap="0"></mx:VBox>
        	</mx:Panel>
        </mx:Canvas>
        
	</mx:HDividedBox>
	
</mx:WindowedApplication>